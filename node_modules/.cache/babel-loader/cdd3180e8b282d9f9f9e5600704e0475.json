{"ast":null,"code":"var _jsxFileName = \"/home/maxwell/sample/course-work/deckbuilder/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\nimport \"./index.css\";\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({\n    id,\n    name\n  }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex(card => card.id === id);\n\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({\n    id\n  }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex(card => card.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      nextDeck.splice(index, 1);\n    } else {\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setResults: setResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      results: results,\n      addCardToDeck: addCardToDeck,\n      removeCardFromDeck: removeCardFromDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeckList, {\n      deck: deck,\n      addCardToDeck: addCardToDeck,\n      removeCardFromDeck: removeCardFromDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lfqvKca5TFDYn1bT4iEiIXohL7k=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 65,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/maxwell/sample/course-work/deckbuilder/src/index.js"],"names":["React","useState","ReactDOM","axios","DeckList","SearchBar","SearchResults","App","results","setResults","deck","setDeck","addCardToDeck","id","name","nextDeck","index","findIndex","card","count","push","removeCardFromDeck","splice","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,aAAP;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,cAAnD;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMW,aAAa,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AACtC,UAAMC,QAAQ,GAAG,CAAC,GAAGL,IAAJ,CAAjB;AACA,UAAMM,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAzC,CAAd;;AAEA,QAAIG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,IAAyB,CAAzB;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACK,IAAT,CAAc;AACZP,QAAAA,EADY;AAEZC,QAAAA,IAFY;AAGZK,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD;;AAEDR,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAfD;;AAiBA,QAAMM,kBAAkB,GAAG,CAAC;AAAER,IAAAA;AAAF,GAAD,KAAY;AACrC,UAAME,QAAQ,GAAG,CAAC,GAAGL,IAAJ,CAAjB;AACA,UAAMM,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAoBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYA,EAAzC,CAAd;;AAEA,QAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB;AACD;;AAED,QAAID,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,KAA0B,CAA9B,EAAiC;AAC/BJ,MAAAA,QAAQ,CAACO,MAAT,CAAgBN,KAAhB,EAAuB,CAAvB;AACD,KAFD,MAEO;AACLD,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,IAAyB,CAAzB;AACD;;AAEDR,IAAAA,OAAO,CAACI,QAAD,CAAP;AACD,GAfD;;AAiBA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEN;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,OAAO,EAAED,OADX;AAEE,MAAA,aAAa,EAAEI,aAFjB;AAGE,MAAA,kBAAkB,EAAES;AAHtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEX,IADR;AAEE,MAAA,aAAa,EAAEE,aAFjB;AAGE,MAAA,kBAAkB,EAAES;AAHtB;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArDD;;GAAMd,G;;KAAAA,G;AAuDNL,QAAQ,CAACqB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport axios from 'axios';\n\nimport \"./index.css\";\n\nimport { DeckList, SearchBar, SearchResults } from \"./components\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({ id, name }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1,\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({ id }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex((card) => card.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    if (nextDeck[index].count === 1) {\n      nextDeck.splice(index, 1);\n    } else {\n      nextDeck[index].count -= 1;\n    }\n\n    setDeck(nextDeck);\n  };\n\n  return (\n    <div id=\"app\">\n      <SearchBar setResults={setResults} />\n      <SearchResults\n        results={results}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n      <DeckList\n        deck={deck}\n        addCardToDeck={addCardToDeck}\n        removeCardFromDeck={removeCardFromDeck}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}